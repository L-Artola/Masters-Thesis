tm_polygons(col = "Debt_Level", title = "Debt Level", palette = "Purples", breaks = c(0,25,50,75, 100, 150,200,300,400, 500)) +
tm_text(text = "state_abbv", size = .75, remove.overlap = TRUE) +
tm_legend(scale = .80) +
tm_layout(title = "State Debt Levels 2020 (%)", title.position = position)
?addPolygons
colors_bin <- colorNumeric("Purples", domain = leaflet_debt$Debt_Level, n = 5)
# Any ideas how to make the scale stronger and brighter
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons( fillColor = ~colors(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons( fillColor = ~colors_bin(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
colors_bin <- colorNumeric("Purples", domain = leaflet_debt$Debt_Level, n = 5)
# Any ideas how to make the scale stronger and brighter
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons( fillColor = ~colors_bin(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons( stroke = FALSE, fillColor = ~colors_bin(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons(fillColor = ~colors_bin(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors_bin,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
?addPolygons
colors_bin <- colorNumeric("Purples", domain = leaflet_debt$Debt_Level, n = 5)
# Any ideas how to make the scale stronger and brighter
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons(fillColor = ~colors_bin(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors_bin,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
rm(list=ls())
# Normal Choroplath libs
library(tidyverse)
library(dplyr)
library(urbnmapr)
library(tmap)
library(sf)
library(stringr)
# Leaflet Choroplath libs
#dplyr
library(leaflet)
library(tigris)
#webscrapping
library(rvest)
data <- read.csv("state_2020.csv")
data_1 <- data %>%
select(State, Debt.Ratio..Total.Debts.Total.Assets) %>%
rename("Debt_Level" = "Debt.Ratio..Total.Debts.Total.Assets")
#Debt was recorded as a character, converted to numeric
data_1$Debt_Level <- str_remove_all(string = data_1$Debt_Level, pattern = "%")
data_1$Debt_Level <- as.numeric(data_1$Debt_Level)
# removing DC as it is a district
states_sf <- get_urbn_map("states", sf = TRUE)
states_sf <- states_sf %>%
filter(state_abbv != "DC")
states_sf <- states_sf %>%
rename(State = "state_name")
state_debt <- left_join(data_1, states_sf, by = "State")
head(state_debt)
state_debt <- st_as_sf(state_debt)
position <- c("center", "top")
tm_shape(state_debt) +
tm_polygons(col = "Debt_Level", title = "Debt Level", palette = "Purples", breaks = c(0,25,50,75, 100, 150,200,300,400, 500)) +
tm_text(text = "state_abbv", size = .75, remove.overlap = TRUE) +
tm_legend(scale = .80) +
tm_layout(title = "State Debt Levels 2020 (%)", title.position = position)
# webscraping credit ratings of each state from wikipedia
credit <- read_html("https://en.wikipedia.org/wiki/List_of_U.S._states_by_credit_rating")
credit_scores <- credit %>%
html_nodes("table") %>%
.[[3]] %>%
html_table(fill = TRUE)
credit_scores <- credit_scores %>%
select(State, '2020') %>%
filter(State != "Source:[2]") %>%
rename(Credit_Rating = "2020")
data_1 <- left_join(data_1, credit_scores, by = "State")
leaflet_map <- states(cb = TRUE)
# Getting rid of US Territories
ter <- list("VI", "DC", "MP", "GU", "AS", "PR")
leaflet_map <- leaflet_map %>%
filter(!STUSPS %in% ter) %>%
rename(State = "NAME")
leaflet_debt <- left_join(data_1, leaflet_map, by = "State")
leaflet_debt <- st_as_sf(leaflet_debt)
content <- paste("State:", leaflet_debt$State,  "<br/>",
"Debt Level:", leaflet_debt$Debt_Level, "<br/>",
"Credit Rating:", leaflet_debt$Credit_Rating, "<br/>")
colors <- colorNumeric("Purples", domain = leaflet_debt$Debt_Level)
# Any ideas how to make the scale stronger and brighter
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons(fillColor = ~colors(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
leaflet_map <- states(cb = TRUE)
# Getting rid of US Territories
ter <- list("VI", "DC", "MP", "GU", "AS", "PR")
leaflet_map <- leaflet_map %>%
filter(!STUSPS %in% ter) %>%
rename(State = "NAME")
leaflet_debt <- left_join(data_1, leaflet_map, by = "State")
leaflet_debt <- st_as_sf(leaflet_debt)
content <- paste("State:", leaflet_debt$State,  "<br/>",
"Debt Level:", leaflet_debt$Debt_Level, "<br/>",
"Credit Rating:", leaflet_debt$Credit_Rating, "<br/>")
colors <- colorNumeric("Purples", domain = leaflet_debt$Debt_Level)
# Any ideas how to make the scale stronger and brighter
leaflet(leaflet_debt) %>%
addProviderTiles("Stamen.Toner") %>%
setView( lng = -95.71289, lat = 37.09024, zoom = 3) %>%
addPolygons(fillColor = ~colors(leaflet_debt$Debt_Level),
fillOpacity = 4,
popup = ~content,
label = leaflet_debt$State) %>%
addLegend(pal = colors,
values = leaflet_debt$Debt_Level,
position = "bottomright",
title = "Debt Level (%)")
rm(list=ls())
library(dplyr)
library (rvest)
web <- read_html("http://vincentarelbundock.github.io/Rdatasets/datasets.html")
web %>%
html_nodes("*") %>%
html_name() %>%
unique()
table <- web %>%
html_nodes ("table")
table_1 <- web %>%
html_nodes("table") %>%
.[[2]] %>%
html_table(fill = TRUE)
table_df <- as.data.frame(table_1) %>%
select("Package", "Item", "Title", "Rows", "Cols")
head(table_df, 5)
link <- "https://vincentarelbundock.github.io/Rdatasets/csv"
.csv <- ".csv"
check <- paste(link, table_df$Package, table_df$Item, sep = "/")
CSV_Links <-paste(check, .csv, sep = "")
table_df <- table_df %>%
mutate(CSV_Links)
head(table_df, 5)
title <- table_df %>%
filter(Title == "Violent Crime Rates by US State")
title
UA <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/datasets/USArrests.csv")
head(UA)
UA_1 <- UA %>%
group_by(X) %>%
mutate(sum(Murder, Assault, Rape)) %>%
rename(Violent_Crime = "sum(Murder, Assault, Rape)")
head(UA_1, 10)
state.77 <- as.data.frame(state.x77)
state.77 <- tibble::rownames_to_column(state.77, "X")
UA_1.2 <- left_join(UA_1, state.77, by = "X")
UA_1.2 <- cbind(UA_1.2,state.division)
UA_1.2 <- cbind(UA_1.2, state.region)
UA_1.2 <- UA_1.2 %>%
rename(State.Division = "...15", State.Region = "...16", State = "X", Murder = "Murder.x")
head(UA_1.2, 10)
UA_avg <- UA_1.2 %>%
ungroup(State) %>%
select(-c("State","State.Division", "State.Region"))
UA_avg <- colMeans(UA_avg)
UA_avg
UA_region <- UA_1.2 %>%
group_by(State.Region) %>%
select(-c("State","State.Division")) %>%
summarise_each(funs(mean)) %>%
arrange(desc(Violent_Crime))
UA_region
UA_division <- UA_1.2 %>%
group_by(State.Division) %>%
select(-c("State","State.Region")) %>%
summarise_each(funs(mean)) %>%
arrange(desc(Population))
UA_division
library(dplyr)
library(ggplot2)
data <- read.csv("debt_gdp")
data <- read.csv("debt_gdp.csv")
library(dplyr)
library(ggplot2)
data <- read.csv("debt_gdp.csv")
head(data)
head(data)
data <- data %>%
rename(Year = "DATE", Debt = "GFDEGDQ188S")
ggplot(data = data) +
geom_line(x = Year, Y = Debt)
head(data)
ggplot(data = data) +
geom_line(x = Year, Y = Debt)
ggplot(data = data) +
geom_line(x = Year, Y = Debt, data = data)
ggplot(data = data) +
geom_line(aes(x = Year, Y = Debt))
ggplot(data = data, aes(x = Year, Y = Debt)) +
geom_line()
ggplot(data = data, aes(x = Year, Y = Debt)) +
geom_line()
library(dplyr)
library(ggplot2)
data <- read.csv("debt_gdp.csv")
data <- data %>%
rename(Year = "DATE", Debt = "GFDEGDQ188S")
head(data)
ggplot(data = data, aes(x = Year, Y = Debt)) +
geom_line()
ggplot(data = data, aes(x = Year, y = Debt)) +
geom_line()
library(ggrepel)
head(data)
data$Year <- gsub(-,"", data$Year)
data$Year <- gsub("-","", data$Year)
head(data)
data$Year <- gsub("-*","", data$Year)
head(data)
library(dplyr)
library(ggplot2)
library(ggrepel)
data <- read.csv("debt_gdp.csv")
data <- data %>%
rename(Year = "DATE", Debt = "GFDEGDQ188S")
head(data)
data$Year <- gsub("-01-01","", data$Year)
head(data)
data$Year <- gsub("-01-01","", data$Year)
data$Year <- transform(as.numeric(data$year))
data$Year <- as.numeric(as.character(data$year))
data$Year <- as.numeric(as.character(data$Year))
head(data)
ggplot(data = data, aes(x = Year, y = Debt)) +
geom_line()
ggplot(data = data, aes(x = Year, y = Debt)) +
geom_line() +
theme_classic()
ggplot(data = data, aes(x = Year, y = Debt)) +
geom_line() +
theme_classic()
library(dplyr)
library(ggplot2)
library(ggrepel)
data <- read.csv("debt_gdp.csv")
data <- data %>%
rename(Year = "DATE", Debt = "GFDEGDQ188S")
data$Year <- gsub("-01-01","", data$Year)
data$Year <- as.numeric(as.character(data$Year))
head(data)
ggplot(data = data, aes(x = Year, y = Debt)) +
geom_line() +
theme_classic()
rm(list=ls())
library(dplyr)
library (rvest)
web <- read_html("http://vincentarelbundock.github.io/Rdatasets/datasets.html")
web %>%
html_nodes("*") %>%
html_name() %>%
unique()
table <- web %>%
html_nodes ("table")
table_1 <- web %>%
html_nodes("table") %>%
.[[2]] %>%
html_table(fill = TRUE)
table_df <- as.data.frame(table_1) %>%
select("Package", "Item", "Title", "Rows", "Cols")
head(table_df, 5)
web <- read_html("http://vincentarelbundock.github.io/Rdatasets/datasets.html")
table <- web %>%
html_nodes ("table")
table_1 <- web %>%
html_nodes("table") %>%
.[[2]] %>%
html_table(fill = TRUE)
table_df <- as.data.frame(table_1) %>%
select("Package", "Item", "Title", "Rows", "Cols")
head(table_df, 5)
link <- "https://vincentarelbundock.github.io/Rdatasets/csv"
.csv <- ".csv"
check <- paste(link, table_df$Package, table_df$Item, sep = "/")
CSV_Links <-paste(check, .csv, sep = "")
table_df <- table_df %>%
mutate(CSV_Links)
head(table_df, 5)
title <- table_df %>%
filter(Title == "Violent Crime Rates by US State")
title
UA_1 <- UA %>%
group_by(X) %>%
mutate(sum(Murder, Assault, Rape)) %>%
rename(Violent_Crime = "sum(Murder, Assault, Rape)")
UA <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/datasets/USArrests.csv")
head(UA)
UA_1 <- UA %>%
group_by(X) %>%
mutate(sum(Murder, Assault, Rape)) %>%
rename(Violent_Crime = "sum(Murder, Assault, Rape)")
head(UA_1, 10)
state.77 <- as.data.frame(state.x77)
state.77 <- tibble::rownames_to_column(state.77, "X")
UA_1.2 <- left_join(UA_1, state.77, by = "X")
UA_1.2 <- cbind(UA_1.2,state.division)
UA_1.2 <- cbind(UA_1.2, state.region)
UA_1.2 <- UA_1.2 %>%
rename(State.Division = "...15", State.Region = "...16", State = "X", Murder = "Murder.x")
head(UA_1.2, 5)
UA_avg <- UA_1.2 %>%
ungroup(State) %>%
select(-c("State","State.Division", "State.Region"))
UA_avg <- colMeans(UA_avg)
UA_avg
UA_region <- UA_1.2 %>%
group_by(State.Region) %>%
select(-c("State","State.Division")) %>%
summarise_each(funs(mean)) %>%
arrange(desc(Violent_Crime))
UA_region
UA_region <- UA_1.2 %>%
group_by(State.Region) %>%
select(-c("State","State.Division")) %>%
summarise_each(funs(mean)) %>%
arrange(desc(Population))
UA_region
UA_division <- UA_1.2 %>%
group_by(State.Division) %>%
select(-c("State","State.Region")) %>%
summarise_each(funs(mean)) %>%
arrange(desc(Population))
UA_division
head(UA_1.2, 5)
head(UA_1.2)
library(tidyr)
?spread
q13 <- UA_1.2 %>%
select(State, Violent_Crime) %>%
spread(State, Violent_Crime)
head(q13)
q13[,5]
q13[1,5]
q13[1,:5]
q13[1,1:5]
head(q13)
q13[,1:5]
?list
named_list <- list(q13$colnames:q13)
named_list <- list(colnames(q13):q13)
q13[1,:]
q13[[1,:]]
q13[[1,]]
q13[1,]
as.list(q13[1,:])
as.vector(q13)
test <- as.vector(q13)
View(test)
test <- as.vector(q13)
class(test)
test <- as.vector(q13)
class(test)
names <- colnames(q13)
vector <- as.vector(q13[1,])
class(vector)
class(vector)
vector <- transform(as.vector(as.data.frame((q13[1,])))
class(vector)
vector <- transform(as.vector(as.data.frame((q13[1,]))))
class(vector)
list <- as.list(q13)
class(list)
View(list)
?lapply
library(dbplyr)
library(dplyr)
data <- read.csv("data.csv")
head("data.csv")
head(data)
data1 <- read.csv("data_1")
data1 <- read.csv("data_1.csv")
head(data1)
library(tidyr)
head(data1)
head(data)
data <- read.csv("data.csv")
data <- data %>%
select(-c("Country.Code", "Series.Code"))
head(data)
colnames(data)
?gather
update.packages()
library(httr)
library(dplyr)
library(httr)
setwd("~/Thesis/Predicting Bank Failures/Data")
bank_failures <- read.csv("Bank Failures Oct-2000 - 2020.csv")
head(bank_failures)
library(ggrepel)
typeof(bank_failures$Closing.Date.)
head(bank_failures)
bank_failures[!grepl("20", bank_failures$Closing.Date.),]
?grepl
bank_failures[!grepl("19", bank_failures$Closing.Date.),]
bank_failure <- bank_failures[!grepl("20", bank_failures$Closing.Date.),] %>%
bank_failures[!grepl("19", bank_failures$Closing.Date.),]
bank_failure <- bank_failures %>%
!grepl("20", bank_failures$Closing.Date.)
bank_failure <- bank_failures %>%
[!grepl("20", bank_failures$Closing.Date.)]
bank_failure <- bank_failures %>%
grepl(!"20", bank_failures$Closing.Date.)
bank_failure <- bank_failures %>%
grepl("20", bank_failures$Closing.Date.)
bank_failure <- bank_failures %>%
grepl("20", Closing.Date.)
head(bank_failures)
bank_failures <- bank_failures %>%
grepl("20", Closing.Date.)
head(bank_failures)
bank_failures <- bank_failures %>%
grepl("20", Closing.Date.)
bank_failures <- bank_failures %>%
grepl("20", bank_failures$Closing.Date.)
bank_failures <-  bank_failures[!grepl("20", bank_failures$Closing.Date.),]
bank_failures <- bank_failures[!grepl("19", bank_failures$Closing.Date.),]
head(bank_failures)
bank_failures <- read.csv("Bank Failures Oct-2000 - 2020.csv")
head(bank_failures_1)
bank_failures_1 <- read.csv("Bank Failures Oct-2000 - 2020.csv")
head(bank_failures_1)
View(bank_failures_1)
bank_failures_1 <-  bank_failures[!grepl("20", bank_failures$Closing.Date.),]
bank_failures_1 <- bank_failures[!grepl("19", bank_failures$Closing.Date.),]
bank_failures_1 <- read.csv("Bank Failures Oct-2000 - 2020.csv")
head(bank_failures_1)
bank_failures_1 <-  bank_failures[!grepl("20", bank_failures$Closing.Date.),]
bank_fail_names <- as.list(bank_failures_1$Bank.Name.)
View(bank_fail_names)
View(bank_fail_names)
head(bank_failures_1)
head(bank_failures_1)
bank_failures <- read.csv("Bank Failures Oct-2000 - 2020.csv")
head(bank_failures)
bank_failures_1 <-  bank_failures[!grepl("20", bank_failures$Closing.Date.),]
bank_fail_names <- as.list(bank_failures_1$Bank.Name.)
rm(list=ls())
library(httr)
library(dplyr)
library(ggrepel)
head(bank_failures_1)
library(httr)
library(dplyr)
library(ggrepel)
bank_failures <- read.csv("Bank Failures Oct-2000 - 2020.csv")
bank_failures_1 <-  bank_failures[!grepl("20", bank_failures$Closing.Date.),]
head(bank_failures_1)
View(bank_failures)
bank_failures_1 <-  bank_failures[!grepl("00", bank_failures$Closing.Date.),]
